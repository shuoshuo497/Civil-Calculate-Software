import sys
from PyQt5.QtWidgets import QApplication, QWidget, QLabel, QLineEdit, QPushButton, QVBoxLayout, QMessageBox

# 模拟用户数据库
users = {}

class MainWindow(QWidget):
    def __init__(self, username):
        super().__init__()

        self.setWindowTitle("Main Page")
        self.show()  # 确保主页面在创建时就显示出来

        layout = QVBoxLayout()

        welcome_label = QLabel("Welcome, " + username + "!")
        layout.addWidget(welcome_label)

        self.logout_button = QPushButton("Logout")
        self.logout_button.clicked.connect(self.close_window)  # 连接按钮点击事件到关闭窗口方法
        layout.addWidget(self.logout_button)

        self.setLayout(layout)



class LoginWindow(QWidget):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("Login")

        layout = QVBoxLayout()

        self.username_label = QLabel("Username:")
        layout.addWidget(self.username_label)

        self.username_input = QLineEdit()
        layout.addWidget(self.username_input)

        self.password_label = QLabel("Password:")
        layout.addWidget(self.password_label)

        self.password_input = QLineEdit()
        self.password_input.setEchoMode(QLineEdit.Password)
        layout.addWidget(self.password_input)

        self.login_button = QPushButton("Login")
        self.login_button.clicked.connect(self.login)
        layout.addWidget(self.login_button)

        self.register_button = QPushButton("Register")
        self.register_button.clicked.connect(self.register)
        layout.addWidget(self.register_button)

        self.setLayout(layout)
        self.adjustSize()

    def login(self):
        username = self.username_input.text()
        password = self.password_input.text()
        if username in users and users[username] == password:
            main_window = MainWindow(username)
            main_window.show()
            self.hide()
        else:
            QMessageBox.warning(self, "Login Failed", "Invalid username or password. Please try again.")

    def register(self):
        username = self.username_input.text()
        password = self.password_input.text()
        if username in users:
            QMessageBox.warning(self, "Registration Failed", "Username already exists. Please choose another username.")
        else:
            users[username] = password
            QMessageBox.information(self, "Registration Successful", "User registered successfully!")


if __name__ == "__main__":
    app = QApplication(sys.argv)
    window = LoginWindow()
    window.show()
    sys.exit(app.exec_())
